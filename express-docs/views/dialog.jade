extends layout

block content
	article.jqm-content(data-role='content')
		h1 Dialogs
			a.jqm-api-link(href='http://api.jquerymobile.com/dialog/', data-ajax='false', data-role='button', data-inline='true', data-mini='true', data-icon='arrow-r', data-iconpos='right') API
		p.jqm-intro
			| Any page can be presented as a modal dialog that appears to be suspended above the page
			| by adding an attribute to the link that leads to the dialog page.
		h2 Basics
		p
			| Any page can be presented as a modal dialog by adding the
			code data-rel="dialog"
			| attribute to the
			| page anchor link. When the "dialog" attribute is applied, the framework adds styles to add rounded corners,
			| margins around the page and a dark background to make the "dialog" appear to be suspended above the page. By
			| default the framework will also add a close button if the dialog has a header.
		p
			code
				<a href="foo.html" data-rel="dialog">Open dialog</a>
		a(href='dialog.html', data-role='button', data-inline='true', data-rel='dialog', data-transition='pop')
			| Open
			| dialog
		h2 Transitions
		p
			| By default, the dialog will open with a 'pop' transition. Like all pages, you can specify any
			a(href='page-transitions.html') page transition
			| you want on the dialog by adding the
			code data-transition
			| attribute to the link. To make it feel more dialog-like, we recommend specifying a transition of "pop",
			| "slidedown" or "flip".
		code
			<a href="foo.html" data-rel="dialog" data-transition="pop">Open dialog</a>
		div
			a(href='dialog.html', data-role='button', data-inline='true', data-rel='dialog', data-transition='pop') data-transition="pop"
			a(href='dialog.html', data-role='button', data-inline='true', data-rel='dialog', data-transition='slidedown') data-transition="slidedown"
			a(href='dialog.html', data-role='button', data-inline='true', data-rel='dialog', data-transition='flip') data-transition="flip"
		h2 Closing dialogs
		p
			| When any link is clicked within a dialog, the framework will automatically close the dialog and transition to
			| the requested page, just as if the dialog were a normal page. Nevertheless, dialogs can also be chained, as
			| explained below under
			strong "Chaining Dialogs"
			| . Similarly, a link that opens a popup will also
			| leave the dialog in place.
		p
			| If the dialog has a header the framework will add a close button at the left side of the header. You can
			| change the position by adding
			code data-close-btn="right"
			| to the dialog container. If you don't want
			| a close button in the header or if you want to add a custom close button, you can use
			code data-close-btn="none"
			| .
		a(href='dialog-rightclosebtn.html', data-role='button', data-inline='true', data-rel='dialog', data-transition='pop')
			| Right
			| close button
		a(href='dialog-noclosebtn.html', data-role='button', data-inline='true', data-rel='dialog', data-transition='pop')
			| No
			| close button
		p
			| To create a "cancel" button in a dialog, just link to the page that triggered the dialog to open and add the
			code data-rel="back"
			| attribute to your link. This pattern of linking to the previous page is also
			| usable in non-JS devices as well.
		p
			| For JavaScript-generated links, you can simply set the href attribute to "#" and use the
			code data-rel="back"
			| attribute. You can also call the dialog's
			code close()
			| method to programmatically close dialogs, for
			| example:
			code $('.ui-dialog').dialog('close')
			| .
		h3 Setting the close button text
		p
			| Just like the page plugin, you can set a dialog's close button text through an option or data attribute.
			| This option is used to customize the text of the close button which is helpful for translating this into
			| different languages. This is displayed as an icon-only button by default so the text isn't visible
			| on-screen, but is read by screen readers so this is an important accessibility feature.
			| The option can be configured for all dialogs by binding to the
			code mobileinit
			| event and setting the
			code $.mobile.dialog.prototype.options.closeBtnText
			| property to a string of your choosing, or you
			| can place the data attribute
			code data-close-btn-text
			| to configure the text from your markup.
		h2 History & Back button behavior
		p
			| Since dialogs are typically used to support actions within a page, the framework does not include dialogs in
			| the hash state history tracking. This means that dialogs will not appear in your browsing history chronology
			| when the Back button is clicked. For example, if you are on a page, click a link to open a dialog, close the
			| dialog, then navigate to another page, if you were to click the browser's Back button at that point you will
			| navigate back to the first page, not the dialog.
		h2 Chaining Dialogs
		p
			| Please note: If a dialog opens another dialog (chaining), closing the last one with a link of type
			code data-rel="back"
			| will always navigate to the previous dialog until the root-page of type
			code data-role="page"
			| is
			| reached. This guarantees a consistent navigation between dialogs.
		h2 Styling & theming
		p
			| Dialogs can be styled with different theme swatches, just like any page by adding
			code data-theme
			| attributes to the header, content, or footer containers. Here is an example of a different dialog design:
		a(href='dialog-alt.html', data-role='button', data-inline='true', data-rel='dialog', data-transition='pop')
			| An
			| alternate color scheme
		p
			| By default dialogs have rounded corners. The option
			code corners
			| can be set to
			code false
			| by
			| adding
			code data-corners="false"
			| to the dialog container:
		a(href='dialog-corners.html', data-role='button', data-inline='true', data-rel='dialog', data-transition='pop')
			| No
			| rounded corners
		p
			| Dialogs appear to be floating above an overlay layer. This overlay adopts the swatch "a" content color by
			| default, but the
			code data-overlay-theme
			| attribute can be added to the page wrapper to set the
			| overlay to any swatch letter. Here is an example of a dialog with the overlay set to swatch "e":
		a(href='dialog-overlay.html', data-role='button', data-inline='true', data-rel='dialog', data-transition='pop')
			| Custom
			| overlay swatch
		p
			| Dialogs can also be used more like a control sheet to offer multiple buttons if you simply remove the top
			| margin from the dialog's inner container element. For example, if your dialog page had a class of
			code my-dialog
			| ,
			| you could add this CSS to pin that dialog to the top:
			code
				.ui-dialog.my-dialog .ui-dialog-contain {
				margin-top: 0 }
			| , or you could just apply that style to all dialogs with
			code
				.ui-dialog
				.ui-dialog-contain { margin-top: 0 }
			| .
		a(href='dialog-buttons.html', data-role='button', data-inline='true', data-rel='dialog', data-transition='slidedown')
			| Share
			| photos...
		h2 Dialog width and margins
		p
			| For the sake of readability, dialogs have a default
			code width
			| of 92.5% and a
			code max-width
			| of 500 pixels. There is also a 10% top
			code margin
			| to give dialogs larger top margin on larger
			| screens, but collapse to a small margin on smartphones. The dialog's inner container is shifted towards the
			code top
			| with 15px to hide the corner styling if a dialog is used as a control sheet (see above). To
			| override these styles, add the following CSS override rule to your stylesheet and tweak as needed:
